# ===========================================================================================
on Windows (Credits to Arduino-IDE-Output ;) )
# ===========================================================================================

\esp32\tools\esptool_py\4.5.1/esptool.exe 
--chip esp32 --port COM23 --baud 921600 --before default_reset --after hard_reset write_flash -z --flash_mode dio 
--flash_freq 80m --flash_size 4MB 

0xe000 boot_app0_0xe000.bin 
0x1000 bootloader_qio_80m_0x1000.bin 
0x8000 RunCPM_VGA32_v6_1_27072023_0x8000.bin
0x10000 RunCPM_VGA32_v6_1_27072023_0x10000.bin

# ===========================================================================================
on Linux (Credits to Mikael Bonner ;) )
# ===========================================================================================

python3 /home/pi/esptool/esptool.py --chip esp32 --port /dev/ttyACM0 --baud 921600 --before default_reset
--after hard_reset write_flash -z --flash_mode dio --flash_freq 80m --flash_size detect
0xe000 ./boot_app0_0xe000.bin 
0x1000 ./bootloader_qio_80m_0x1000.bin 
0x8000 ./RunCPM_VGA32_v6_1_27072023_0x8000.bin
0x10000 ./RunCPM_VGA32_v6_1_27072023_0x10000.bin

# ===========================================================================================
on macOS (Credits to Fred Smith ;) )
# ===========================================================================================
Start with
% brew install esptool
# ===========================================================================================
% esptool.py --chip esp32 --port /dev/cu.usbserial-1420 --baud 115200 --before default_reset 
--after hard_reset write_flash -z --flash_mode dio --flash_freq 80m --flash_size detect 
0xe000 boot_app0_0xe000.bin 
0x1000 bootloader_qio_80m_0x1000.bin 
0x8000 RunCPM_VGA32_v6_1_27072023_0x8000.bin
0x10000 RunCPM_VGA32_v6_1_27072023_0x10000.bin
# ===========================================================================================